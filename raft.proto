syntax = "proto3";

package raft;

message AppendEntriesMessage {
  int32 leaderID = 1;
  int32 currentTerm = 2;
  int64 lastLogIndex = 3;
  int32 lastLogTerm = 4;
  repeated LogEntry logEntries = 5;
  int32 leaderCommitIndex = 6;
}

message LogEntry {
  int64 index = 1;
  int32 term = 2;
  CommandMessage command = 3;
}

message CommandMessage {
  string operation = 1;
  string key = 2;
  string value = 3;
}

message AppendEntriesResponse {
  int32 followerID = 1;
  int32 currentTerm = 2;
  bool success = 3;
}

message RequestVoteMessage{
  int32 candidateID = 1;
  int32 currentTerm = 2;
  int64 lastLogIndex = 3;
  int32 lastLogTerm = 4;
}

message RequestVoteResponse{
  int32 followerID = 1;
  int32 currentTerm = 2;
  int64 lastLogIndex = 3;
  int32 lastLogTerm = 4;
  bool voteGranted = 5;
}

message GetLeaderResponse {
  int32 leaderID = 1;
  string leaderAddress = 2;
}

message SetKVMessage {
  string key = 1;
  string value = 2;
}

message GetValMessage {
  string key = 1;
}

message SetKVResponse {
  bool success = 1;
}

message GetValResponse {
  bool success = 1;
  string value = 2;
}



message EmptyMessage {}

service Raft{
  rpc AppendEntries(stream AppendEntriesMessage) returns (AppendEntriesResponse);
  rpc RequestVote(RequestVoteMessage) returns (RequestVoteResponse);
  rpc GetLeader(EmptyMessage) returns (GetLeaderResponse);
  rpc SetKV(SetKVMessage) returns (SetKVResponse);
  rpc GetVal(GetValMessage) returns (GetValResponse);
}